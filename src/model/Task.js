/*
 * Lista de tareas
 * Esta API permite controlar y manejar una lista de tareas. Crear, lista, actualizar y eliminar tareas de cualquier tipo
 *
 * OpenAPI spec version: 1.0.0
 * Contact: juandgc09@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The Task model module.
 * @module model/Task
 * @version 1.0.0
 */
export class Task {
  /**
   * Constructs a new <code>Task</code>.
   * @alias module:model/Task
   * @class
   * @param idTarea {Number} Codigo numerico unico para identificar la tarea
   * @param nombreTarea {String} nombre representativo a la tarea sin espacios
   * @param descripcion {String} Breve descripcion de la tarea
   */
  constructor(idTarea, nombreTarea, descripcion) {
    this.idTarea = idTarea;
    this.nombreTarea = nombreTarea;
    this.descripcion = descripcion;
  }

  /**
   * Constructs a <code>Task</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Task} obj Optional instance to populate.
   * @return {module:model/Task} The populated <code>Task</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Task();
      if (data.hasOwnProperty('id_tarea'))
        obj.idTarea = ApiClient.convertToType(data['id_tarea'], 'Number');
      if (data.hasOwnProperty('nombre_tarea'))
        obj.nombreTarea = ApiClient.convertToType(data['nombre_tarea'], 'String');
      if (data.hasOwnProperty('descripcion'))
        obj.descripcion = ApiClient.convertToType(data['descripcion'], 'String');
      if (data.hasOwnProperty('momento_dia'))
        obj.momentoDia = ApiClient.convertToType(data['momento_dia'], 'String');
    }
    return obj;
  }
}

/**
 * Codigo numerico unico para identificar la tarea
 * @member {Number} idTarea
 */
Task.prototype.idTarea = undefined;

/**
 * nombre representativo a la tarea sin espacios
 * @member {String} nombreTarea
 */
Task.prototype.nombreTarea = undefined;

/**
 * Breve descripcion de la tarea
 * @member {String} descripcion
 */
Task.prototype.descripcion = undefined;

/**
 * Allowed values for the <code>momentoDia</code> property.
 * @enum {String}
 * @readonly
 */
Task.MomentoDiaEnum = {
  /**
   * value: "Madrugada"
   * @const
   */
  madrugada: "Madrugada",

  /**
   * value: "Mañana"
   * @const
   */
  maana: "Mañana",

  /**
   * value: "Mediodia"
   * @const
   */
  mediodia: "Mediodia",

  /**
   * value: "Tarde"
   * @const
   */
  tarde: "Tarde",

  /**
   * value: "Noche"
   * @const
   */
  noche: "Noche",

  /**
   * value: "Medianoche"
   * @const
   */
  medianoche: "Medianoche"
};
/**
 * Momento del dia donde se plantea realizar la tarea
 * @member {module:model/Task.MomentoDiaEnum} momentoDia
 */
Task.prototype.momentoDia = undefined;

